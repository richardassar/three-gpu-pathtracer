{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,iHAUA,IAAIC,EAAUC,EAAUC,EAAWC,EAAYC,EAAcC,EAAQC,EACjEC,EAAmBC,EACnBC,EAAQC,EAAiBC,EACzBC,EAEJ,MAEMC,EAAS,CAEdC,UAAW,CACVC,MAAO,UACPC,SAAU,UACVC,kBAAmB,EACnBC,UAAW,GACXC,UAAW,GACXC,IAAK,MACLC,aAAc,EACdC,QAAS,EACTC,OAAO,EACPC,YAAY,GAEbC,UAAW,CACVV,MAAO,UACPC,SAAU,UACVC,kBAAmB,EACnBC,UAAW,GACXC,UAAW,GACXE,aAAc,EACdD,IAAK,MACLE,QAAS,EACTC,OAAO,EACPC,YAAY,GAEbE,UAAW,CACVX,MAAO,UACPG,UAAW,IACXC,UAAW,IACXI,OAAO,EACPC,YAAY,GAGbG,4BAA4B,EAC5BC,aAAa,EACbC,qBAAsB,EACtBC,oBAAqB,EACrBC,gBAAiB,EACjBC,eAAgB,IAChBC,QAAS,EACTC,gBAAiB,EACjBC,iBAAiB,EACjBC,gBAAiB,EAAIC,OAAOC,iBAC5BC,sBAAuB,GACvBC,mBAAoB,GACpBC,MAAO,EACPC,gBAAiB,EACjBC,0BAA0B,EAC1BC,iBAAkB,eAGdP,OAAOQ,SAASC,KAAKC,SAAU,kBAEnClC,EAAOC,UAAUK,UAAY,EAC7BN,EAAOC,UAAUI,UAAY,IAC7BL,EAAOC,UAAUO,aAAe,EAChCR,EAAOC,UAAUC,MAAQ,UACzBF,EAAOoB,QAAU,IA2TlB,SAASe,IAER,MAAMC,EAAIZ,OAAOa,WACXC,EAAId,OAAOe,YACXC,EAAQxC,EAAOuB,gBACfkB,EAAMjB,OAAOC,iBAEnBnC,EAAWoD,QAASN,EAAII,EAAQC,EAAKH,EAAIE,EAAQC,GACjDnD,EAAWqD,QAEXxD,EAASuD,QAASN,EAAGE,GACrBnD,EAASyD,cAAepB,OAAOC,iBAAmBe,GAElD,MAAMK,EAAST,EAAIE,EAEnB5C,EAAkBmD,OAASA,EAC3BnD,EAAkBoD,yBAElB,MAAMC,EAzYY,EAyYeF,EACjClD,EAAYqD,IAAMD,EAAc,EAChCpD,EAAYsD,OAASF,GAAc,EACnCpD,EAAYmD,yBAIb,SAASI,IAER5D,EAAWqD,QAIZ,SAASQ,IAER,MAAMC,EAAavD,EAAgBwD,SAAUzD,EAAQI,EAAOkB,iBAC5D5B,EAAWgE,SAASC,WAAWC,WAAYJ,GAC3CtD,EAAM2D,YAAcL,EACpB9D,EAAWqD,QAIZ,SAASe,EAAc3B,GAEI,gBAArBA,GAECxC,GAEJG,EAAkBiE,SAASC,KAAMrE,EAAaoE,UAI/CpE,EAAeG,IAIVH,GAEJI,EAAYgE,SAASC,KAAMrE,EAAaoE,UAIzCpE,EAAeI,GAIhBP,EAASyE,OAAStE,EAClBD,EAAWwE,OAASvE,EAEpBH,EAAS2E,SAETb,IAID,SAASc,IAERC,sBAAuBD,GAEvB,MAAME,EAAKzE,EAAW,GACtByE,EAAGhE,MAAMiE,IAAKnE,EAAOC,UAAUC,OAAQkE,sBACvCF,EAAG/D,SAASgE,IAAKnE,EAAOC,UAAUE,UAAWiE,sBAC7CF,EAAG9D,kBAAoBJ,EAAOC,UAAUG,kBACxC8D,EAAG5D,UAAYN,EAAOC,UAAUK,UAChC4D,EAAG7D,UAAYL,EAAOC,UAAUI,UAChC6D,EAAG1D,aAAeR,EAAOC,UAAUO,aACnC0D,EAAG3D,IAAMP,EAAOC,UAAUM,IAC1B2D,EAAGzD,QAAUT,EAAOC,UAAUQ,QAE9B,MAAM4D,EAAK5E,EAAW,GACtB4E,EAAGnE,MAAMiE,IAAKnE,EAAOY,UAAUV,OAAQkE,sBACvCC,EAAGlE,SAASgE,IAAKnE,EAAOY,UAAUT,UAAWiE,sBAC7CC,EAAGjE,kBAAoBJ,EAAOY,UAAUR,kBACxCiE,EAAG/D,UAAYN,EAAOY,UAAUN,UAChC+D,EAAGhE,UAAYL,EAAOY,UAAUP,UAChCgE,EAAG7D,aAAeR,EAAOY,UAAUJ,aACnC6D,EAAG9D,IAAMP,EAAOY,UAAUL,IAC1B8D,EAAG5D,QAAUT,EAAOY,UAAUH,QAE9B,MAAM6D,EAAK7E,EAAW,GACtB6E,EAAGpE,MAAMiE,IAAKnE,EAAOa,UAAUX,OAAQkE,sBACvCE,EAAGhE,UAAYN,EAAOa,UAAUP,UAChCgE,EAAGjE,UAAYL,EAAOa,UAAUR,UAEhCf,EAAWgE,SAASiB,UAAUf,WAAYnE,EAAUkF,UAAWlF,EAAUmF,UACzElF,EAAWgE,SAASiB,UAAUE,SAAU,EAAGzE,EAAOC,UAAUS,OAC5DpB,EAAWgE,SAASiB,UAAUE,SAAU,EAAGzE,EAAOY,UAAUF,OAC5DpB,EAAWgE,SAASiB,UAAUE,SAAU,EAAGzE,EAAOa,UAAUH,OAC5DpB,EAAWgE,SAASiB,UAAUG,cAAe,EAAG1E,EAAOC,UAAUU,YACjErB,EAAWgE,SAASiB,UAAUG,cAAe,EAAG1E,EAAOY,UAAUD,YACjErB,EAAWgE,SAASiB,UAAUG,cAAe,EAAG1E,EAAOa,UAAUF,YAEjErB,EAAWgE,SAAS3B,mBAAqB3B,EAAO2B,mBAChDrC,EAAWgE,SAAStC,qBAAuBhB,EAAOgB,qBAClD1B,EAAWgE,SAASnC,eAAiBnB,EAAOmB,eAC5C7B,EAAWgE,SAASlC,QAAUpB,EAAOoB,QACrC9B,EAAWgE,SAASzB,gBAAkB7B,EAAO6B,gBAC7CvC,EAAWgE,SAASqB,eAAenB,WAAYjE,GAE/CA,EAAaqF,oBAER5E,EAAO6B,gBAAkB,EAE7B/B,EAAM+E,WAAa,KAInB/E,EAAM+E,WAAa/E,EAAM2D,YAI1B,IAAM,IAAIqB,EAAI,EAAGC,EAAI/E,EAAOqB,gBAAiByD,EAAIC,EAAGD,IAEnDxF,EAAWyE,SAIPzE,EAAW0F,QAAU,GAEzB7F,EAAS8F,OAAQnF,EAAOP,GAIzBJ,EAAS+F,WAAY,EACrB1F,EAAO8D,SAAS6B,IAAM7F,EAAW8F,OAAOC,QACxC7F,EAAOyF,OAAQ9F,GACfA,EAAS+F,WAAY,EAErBnF,EAAUuF,UAAY,YAAaC,KAAKC,MAAOlG,EAAW0F,WAxcvCxD,OAAOa,WAAab,OAAOe,YAC5B,MAElBvC,EAAOoB,QAAUmE,KAAKE,IAAKzF,EAAOoB,QAAS,GAC3CpB,EAAOuB,iBAAmB,GAC1BvB,EAAO4B,MAAQ,EACf5B,EAAOc,4BAA6B,EACpCd,EAAOkB,gBAAkB,KAM1BwE,iBAECvG,EAAW,IAAIF,EAAA0G,cAAqB,CAAEC,WAAW,IACjDzG,EAAS0G,YAAc5G,EAAA6G,sBACvB3G,EAAS4G,cAAe,EAAG,GAC3BC,SAASC,KAAKC,YAAa/G,EAASgH,YAEpC,MAAMtD,EAASrB,OAAOa,WAAab,OAAOe,YAC1C7C,EAAoB,IAAI0G,EAAAC,eAAgB,GAAIxD,EAAQ,KAAO,KAC3DnD,EAAkBiE,SAASQ,KAAK,EAAK,EAAG,GAExC,MAAMpB,EAzFY,EAyFeF,EACjClD,EAAc,IAAIV,EAAAqH,oBAA0BC,IAAkBA,IAAgBxD,EAAc,EAAGA,GAAc,EAAK,EAAG,KACrHpD,EAAYgE,SAASQ,KAAK,EAAK,EAAG,GAElC7E,EAAa,IAAI8G,EAAAI,oBAAqBrH,GACtCG,EAAWmH,OAAQ,EACnBnH,EAAWgE,SAAW,IAAI8C,EAAAM,4BAC1BpH,EAAWgE,SAASqD,UAAW,yBAA0B3G,EAAO0B,uBAChEpC,EAAWgE,SAASqD,UAAW,cAAeC,OAAQ5G,EAAOc,6BAC7DxB,EAAWsC,MAAMuC,IAAKnE,EAAO4B,MAAO5B,EAAO4B,OAE3CpC,EAAS,IAAIqH,EAAAC,eAAgB,IAAI7H,EAAA8H,kBAAyB,CACzD5B,IAAK7F,EAAW8F,OAAOC,QACvB2B,SAAU/H,EAAAgI,kBAGX7H,EAAW,IAAI8H,EAAAC,cAAezH,EAAmBP,EAASgH,YAC1D/G,EAASgI,iBAAkB,UAAU,KAEpC9H,EAAWqD,WAIZ7C,EAAQ,IAAIb,EAAAoI,MAEZtH,EAAYiG,SAASsB,eAAgB,WAErCzH,EAAkB,IAAIuG,EAAAmB,uBAAwBpI,GAE9C,MAAMqI,EAAgB,IAAIC,SAASC,KAElC,IAAIC,EAAAC,YACFC,KAAM,kHAAkHxC,IAExHzF,EAASyF,EAETlC,IACAuE,UAMGI,EAAY,IAAIC,EAAAC,uBAChBC,GAAc,IAAIC,EAAAC,YACtBC,kBAAmBC,EAAAC,gBACnBC,UAAW,4GACXC,MAAMC,IAEN,MAAMC,EAAQ,IAAIzJ,EAAA0J,MAElBF,EAAKG,MAAMpG,MAAMqG,UAAW,KAC5BJ,EAAKG,MAAMhE,oBACX8D,EAAMI,IAAKL,EAAKG,OAEhB,MAAMG,EAAM,IAAI9J,EAAA+J,KAChBD,EAAIE,cAAeR,EAAKG,OAExB,MAAMpD,EAAQ,IAAIvG,EAAAiK,KACjB,IAAIjK,EAAAkK,uBAA8B,EAAG,EAAG,IAAM,KAC9C,IAAIlK,EAAAmK,qBAA4B,CAAElJ,MAAO,SAAUG,UAAW,EAAGC,UAAW,OAE7EkF,EAAM6D,SAAW7D,EAAM6D,SAASC,eAChC9D,EAAM6D,SAASE,cACf/D,EAAM7B,SAAS6F,EAAIT,EAAIU,IAAID,EAAI,IAC/Bd,EAAMI,IAAKtD,GAEX,MAAMvF,EAAY,IAAIhB,EAAAmK,qBAChBxI,EAAY,IAAI3B,EAAAmK,qBAgCtB,OA9BAX,EAAKG,MAAMc,UAAUC,IAIfA,EAAEN,UAENM,EAAEN,SAASO,uBAII,aAAXD,EAAEE,KAENF,EAAErG,SAAW1C,EAIb+I,EAAErG,SAAWrD,EAIE,gBAAX0J,EAAEE,OAENF,EAAErG,SAAW1C,MAMfnB,EAAY,CAAEQ,EAAWW,EAAW4E,EAAMlC,UAEnCwE,EAAUzE,SAAUqF,MAG3BF,MAAMsB,IAENzK,EAAYyK,EAEZhK,EAAMgJ,IAAKgB,EAAOlB,OAElB,MArNHmB,IAqNWA,EArNXvF,SAqNgBA,EArNhBD,UAqN0BA,GAAcuF,EAC/BT,EAAWU,EAAIV,SACf/F,EAAWhE,EAAWgE,SAE5BA,EAASyG,IAAIvG,WAAYuG,GACzBzG,EAAS0G,gBAAgBxG,WAAY6F,EAASY,WAAWC,QACzD5G,EAAS6G,iBAAiB3G,WAAY6F,EAASY,WAAWG,SAC1D9G,EAAS+G,YAAY7G,WAAY6F,EAASY,WAAWK,IACrDhH,EAASiH,uBAAuB/G,WAAY6F,EAASY,WAAWO,eAChElH,EAASkB,SAASiG,YAAatL,EAAU,KAAM,KAAMqF,GACrDlB,EAASiB,UAAUf,WAAYe,EAAWC,GAE1CsD,EAAU4C,mBAINjD,QAAQkD,IAAK,CAAE1C,EAAaT,IAElCxB,SAASsB,eAAgB,WAAYsD,SACrC5E,SAASC,KAAK4E,UAAU/B,IAAK,gBAE7B3G,IACAX,OAAO4F,iBAAkB,SAAUjF,GACnC,MAAM2I,EAAM,IAAIC,EAAAC,IAEhBtH,EAAc1D,EAAO+B,kBAErB,MAAMkJ,EAAWH,EAAII,UAAW,gBAChCD,EAASnC,IAAK9I,EAAQ,mBAAoBmL,UAAUC,IAEnDjM,EAAS0G,YAAcuF,EAAQnM,EAAA6G,sBAA8B7G,EAAAoM,cAC7D7L,EAAO8D,SAASgI,aAAc,KAG/BL,EAASnC,IAAK9I,EAAQ,eAAgBmL,UAAUC,IAE/C9L,EAAWyB,YAAcqK,KAG1BH,EAASnC,IAAK9I,EAAQ,8BAA+BmL,UAAUC,IAE9D9L,EAAWgE,SAASqD,UAAW,cAAeC,OAAQwE,IACtD9L,EAAWqD,WAGZsI,EAASnC,IAAK9I,EAAQ,QAAS,EAAG,EAAG,GAAImL,UAAUC,IAElD9L,EAAWsC,MAAMuC,IAAKiH,EAAOA,MAG9BH,EAASnC,IAAK9I,EAAQ,kBAAmB,EAAG,GAAI,GAChDiL,EAASnC,IAAK9I,EAAQ,qBAAsB,EAAG,GAAImL,UAAU,KAE5D7L,EAAWqD,WAGZsI,EAASnC,IAAK9I,EAAQ,UAAW,EAAG,GAAI,GAAImL,UAAU,KAErD7L,EAAWqD,WAGZsI,EAASnC,IAAK9I,EAAQ,wBAAyB,EAAG,GAAI,GAAImL,UAAUC,IAEnE9L,EAAWgE,SAASqD,UAAW,yBAA0ByE,GACzD9L,EAAWqD,WAGZsI,EAASnC,IAAK9I,EAAQ,kBAAmB,GAAK,GAAImL,UAAU,KAE3DhJ,OAID,MAAMoJ,EAAYT,EAAII,UAAW,eACjCK,EAAUzC,IAAK9I,EAAQ,uBAAwB,EAAG,IAAKmL,UAAU,KAEhE7L,EAAWqD,WAGZ4I,EAAUzC,IAAK9I,EAAQ,sBAAuB,EAAG,EAAIuF,KAAKiG,IAAKL,UAAUM,IAExEnM,EAAWgE,SAASrC,oBAAoByK,gBAAgB,IAAIzM,EAAA0M,SAAgBC,cAAeH,IAC3FnM,EAAWqD,WAGZ4I,EAAUzC,IAAK9I,EAAQ,kBAAmB,EAAG,GAAImL,UAAU,KAE1DhI,OAGDoI,EAAUzC,IAAK9I,EAAQ,iBAAkB,EAAG,GAAImL,UAAU,KAEzD7L,EAAWqD,WAGZ4I,EAAUzC,IAAK9I,EAAQ,kBAAmB,EAAG,GAAImL,UAAU,KAE1D7L,EAAWqD,WAGZ4I,EAAUzC,IAAK9I,EAAQ,4BAA6BmL,UAAUM,IAExDA,EAEJzF,SAASC,KAAK4E,UAAU/B,IAAK,gBAI7B9C,SAASC,KAAK4E,UAAUD,OAAQ,mBAMlC,MAAMiB,EAAef,EAAII,UAAW,UACpCW,EAAa/C,IAAK9I,EAAQ,mBAAoB,CAAE,cAAe,iBAAmBmL,UAAUM,IAE3F/H,EAAc+H,MAGfI,EAAa/C,IAAKpJ,EAAmB,gBAAiB,EAAG,KAAMyL,SAAUjI,GACzE2I,EAAa/C,IAAKpJ,EAAmB,iBAAkB,EAAG,GAAI,GAAIyL,UAAU,SAAWM,GAEtF/L,EAAkBoM,eAAuB,IAANL,EAAU,EAAIlG,KAAKE,IAAKgG,EAAG,GAC9DM,KAAKC,gBACL9I,OAGD2I,EAAa/C,IAAKpJ,EAAmB,mBAAoB,EAAG,MAAOyL,SAAUjI,GAC7E2I,EAAa/C,IAAKpJ,EAAmB,kBAAmB,GAAK,IAAOyL,SAAUjI,GAC9E2I,EAAa/C,IAAKpJ,EAAmB,YAAa,EAAG,IAAKyL,SAAUjI,GAAQ+I,SAC5EJ,EAAa/C,IAAKpJ,EAAmB,QAAS,GAAK,IAAKyL,SAAUjI,GAAQ+I,SAC1EJ,EAAa/C,IAAKpJ,EAAmB,MAAO,GAAI,KAAMyL,UAAU,KAE/DzL,EAAkBoD,yBAClBI,OAEG+I,SAEJ,MAAMC,EAAapB,EAAII,UAAW,kBAClCgB,EAAWC,SAAUnM,EAAOC,UAAW,SAAUkL,SAAUjI,GAC3DgJ,EAAWC,SAAUnM,EAAOC,UAAW,YAAakL,SAAUjI,GAC9DgJ,EAAWpD,IAAK9I,EAAOC,UAAW,oBAAqB,EAAK,GAAM,KAAOkL,SAAUjI,GACnFgJ,EAAWpD,IAAK9I,EAAOC,UAAW,YAAa,EAAG,GAAIkL,SAAUjI,GAChEgJ,EAAWpD,IAAK9I,EAAOC,UAAW,YAAa,EAAG,GAAIkL,SAAUjI,GAChEgJ,EAAWpD,IAAK9I,EAAOC,UAAW,UAAW,EAAG,GAAIkL,SAAUjI,GAC9DgJ,EAAWpD,IAAK9I,EAAOC,UAAW,eAAgB,EAAG,GAAIkL,SAAUjI,GACnEgJ,EAAWpD,IAAK9I,EAAOC,UAAW,MAAO,GAAK,GAAMkL,SAAUjI,GAC9DgJ,EAAWpD,IAAK9I,EAAOC,UAAW,SAAUkL,SAAUjI,GACtDgJ,EAAWpD,IAAK9I,EAAOC,UAAW,cAAekL,SAAUjI,GAC3DgJ,EAAWE,QAEX,MAAMC,EAAavB,EAAII,UAAW,iBAClCmB,EAAWF,SAAUnM,EAAOY,UAAW,SAAUuK,SAAUjI,GAC3DmJ,EAAWF,SAAUnM,EAAOY,UAAW,YAAauK,SAAUjI,GAC9DmJ,EAAWvD,IAAK9I,EAAOY,UAAW,oBAAqB,EAAK,GAAM,KAAOuK,SAAUjI,GACnFmJ,EAAWvD,IAAK9I,EAAOY,UAAW,YAAa,EAAG,GAAIuK,SAAUjI,GAChEmJ,EAAWvD,IAAK9I,EAAOY,UAAW,YAAa,EAAG,GAAIuK,SAAUjI,GAChEmJ,EAAWvD,IAAK9I,EAAOY,UAAW,UAAW,EAAG,GAAIuK,SAAUjI,GAC9DmJ,EAAWvD,IAAK9I,EAAOY,UAAW,eAAgB,EAAG,GAAIuK,SAAUjI,GACnEmJ,EAAWvD,IAAK9I,EAAOY,UAAW,MAAO,GAAK,GAAMuK,SAAUjI,GAC9DmJ,EAAWvD,IAAK9I,EAAOY,UAAW,SAAUuK,SAAUjI,GACtDmJ,EAAWvD,IAAK9I,EAAOY,UAAW,cAAeuK,SAAUjI,GAC3DmJ,EAAWD,QAEX,MAAME,EAAaxB,EAAII,UAAW,kBAClCoB,EAAWH,SAAUnM,EAAOa,UAAW,SAAUsK,SAAUjI,GAC3DoJ,EAAWxD,IAAK9I,EAAOa,UAAW,YAAa,EAAG,GAAIsK,SAAUjI,GAChEoJ,EAAWxD,IAAK9I,EAAOa,UAAW,YAAa,EAAG,GAAIsK,SAAUjI,GAChEoJ,EAAWxD,IAAK9I,EAAOa,UAAW,SAAUsK,SAAUjI,GACtDoJ,EAAWxD,IAAK9I,EAAOa,UAAW,cAAesK,SAAUjI,GAC3DoJ,EAAWF,QAEXpI,IAvSDuI","sources":["example/materialBall.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera, BlurredEnvMapGenerator } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, activeCamera, fsQuad, materials;\nlet perspectiveCamera, orthoCamera;\nlet envMap, envMapGenerator, scene;\nlet samplesEl;\n\nconst orthoWidth = 5;\n\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.1,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.8,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.01,\n\t\tmetalness: 0.05,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\n\tmultipleImportanceSampling: true,\n\tstableNoise: false,\n\tenvironmentIntensity: 3,\n\tenvironmentRotation: 0,\n\tenvironmentBlur: 0.0,\n\tbackgroundBlur: 0.05,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\tbackgroundAlpha: 1,\n\tcheckerboardTransparency: true,\n\tcameraProjection: 'Perspective',\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tconst aspect = window.innerWidth / window.innerHeight;\n\tperspectiveCamera = new PhysicalCamera( 75, aspect, 0.025, 500 );\n\tperspectiveCamera.position.set( - 4, 2, 3 );\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera = new THREE.OrthographicCamera( orthoWidth / - 2, orthoWidth / 2, orthoHeight / 2, orthoHeight / - 2, 0, 100 );\n\torthoCamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t} ) );\n\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr', texture => {\n\n\t\t\t\tenvMap = texture;\n\n\t\t\t\tupdateEnvBlur();\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshStandardMaterial();\n\t\t\tconst material2 = new THREE.MeshStandardMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\tdocument.body.classList.add( 'checkerboard' );\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\tconst gui = new GUI();\n\n\tupdateCamera( params.cameraProjection );\n\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tfsQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.setFromMatrix4( new THREE.Matrix4().makeRotationY( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'backgroundAlpha', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t} else {\n\n\t\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t\t}\n\n\t} );\n\n\tconst cameraFolder = gui.addFolder( 'Camera' );\n\tcameraFolder.add( params, 'cameraProjection', [ 'Perspective', 'Orthographic' ] ).onChange( v => {\n\n\t\tupdateCamera( v );\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'focusDistance', 1, 100 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t\tperspectiveCamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t\tthis.updateDisplay();\n\t\treset();\n\n\t} );\n\tcameraFolder.add( perspectiveCamera, 'apertureRotation', 0, 12.5 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'anamorphicRatio', 0.1, 10.0 ).onChange( reset );\n\tcameraFolder.add( perspectiveCamera, 'bokehSize', 0, 50 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fStop', 0.3, 20 ).onChange( reset ).listen();\n\tcameraFolder.add( perspectiveCamera, 'fov', 25, 100 ).onChange( () => {\n\n\t\tperspectiveCamera.updateProjectionMatrix();\n\t\treset();\n\n\t} ).listen();\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'matte' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'castShadow' ).onChange( reset );\n\tmatFolder1.close();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'matte' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'castShadow' ).onChange( reset );\n\tmatFolder2.close();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'matte' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'castShadow' ).onChange( reset );\n\tmatFolder3.close();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\n\tperspectiveCamera.aspect = aspect;\n\tperspectiveCamera.updateProjectionMatrix();\n\n\tconst orthoHeight = orthoWidth / aspect;\n\torthoCamera.top = orthoHeight / 2;\n\torthoCamera.bottom = orthoHeight / - 2;\n\torthoCamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tscene.environment = blurredTex;\n\tptRenderer.reset();\n\n}\n\nfunction updateCamera( cameraProjection ) {\n\n\tif ( cameraProjection === \"Perspective\" ) {\n\n\t\tif ( activeCamera ) {\n\n\t\t\tperspectiveCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = perspectiveCamera;\n\n\t} else {\n\n\t\tif ( activeCamera ) {\n\n\t\t\torthoCamera.position.copy( activeCamera.position );\n\n\t\t}\n\n\t\tactiveCamera = orthoCamera;\n\n\t}\n\n\tcontrols.object = activeCamera;\n\tptRenderer.camera = activeCamera;\n\n\tcontrols.update();\n\n\treset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst m1 = materials[ 0 ];\n\tm1.color.set( params.material1.color ).convertSRGBToLinear();\n\tm1.emissive.set( params.material1.emissive ).convertSRGBToLinear();\n\tm1.emissiveIntensity = params.material1.emissiveIntensity;\n\tm1.metalness = params.material1.metalness;\n\tm1.roughness = params.material1.roughness;\n\tm1.transmission = params.material1.transmission;\n\tm1.ior = params.material1.ior;\n\tm1.opacity = params.material1.opacity;\n\n\tconst m2 = materials[ 1 ];\n\tm2.color.set( params.material2.color ).convertSRGBToLinear();\n\tm2.emissive.set( params.material2.emissive ).convertSRGBToLinear();\n\tm2.emissiveIntensity = params.material2.emissiveIntensity;\n\tm2.metalness = params.material2.metalness;\n\tm2.roughness = params.material2.roughness;\n\tm2.transmission = params.material2.transmission;\n\tm2.ior = params.material2.ior;\n\tm2.opacity = params.material2.opacity;\n\n\tconst m3 = materials[ 2 ];\n\tm3.color.set( params.material3.color ).convertSRGBToLinear();\n\tm3.metalness = params.material3.metalness;\n\tm3.roughness = params.material3.roughness;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tptRenderer.material.materials.setMatte( 0, params.material1.matte );\n\tptRenderer.material.materials.setMatte( 1, params.material2.matte );\n\tptRenderer.material.materials.setMatte( 2, params.material3.matte );\n\tptRenderer.material.materials.setCastShadow( 0, params.material1.castShadow );\n\tptRenderer.material.materials.setCastShadow( 1, params.material2.castShadow );\n\tptRenderer.material.materials.setCastShadow( 2, params.material3.castShadow );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.backgroundAlpha = params.backgroundAlpha;\n\tptRenderer.material.physicalCamera.updateFrom( activeCamera );\n\n\tactiveCamera.updateMatrixWorld();\n\n\tif ( params.backgroundAlpha < 1.0 ) {\n\n\t\tscene.background = null;\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\n\t}\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\tif ( ptRenderer.samples < 1 ) {\n\n\t\trenderer.render( scene, activeCamera );\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.material.map = ptRenderer.target.texture;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0473c5c83fd2a77a$var$renderer","$0473c5c83fd2a77a$var$controls","$0473c5c83fd2a77a$var$sceneInfo","$0473c5c83fd2a77a$var$ptRenderer","$0473c5c83fd2a77a$var$activeCamera","$0473c5c83fd2a77a$var$fsQuad","$0473c5c83fd2a77a$var$materials","$0473c5c83fd2a77a$var$perspectiveCamera","$0473c5c83fd2a77a$var$orthoCamera","$0473c5c83fd2a77a$var$envMap","$0473c5c83fd2a77a$var$envMapGenerator","$0473c5c83fd2a77a$var$scene","$0473c5c83fd2a77a$var$samplesEl","$0473c5c83fd2a77a$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","opacity","matte","castShadow","material2","material3","multipleImportanceSampling","stableNoise","environmentIntensity","environmentRotation","environmentBlur","backgroundBlur","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","backgroundAlpha","checkerboardTransparency","cameraProjection","location","hash","includes","$0473c5c83fd2a77a$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","orthoHeight","top","bottom","$0473c5c83fd2a77a$var$reset","$0473c5c83fd2a77a$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","environment","$0473c5c83fd2a77a$var$updateCamera","position","copy","object","camera","update","$0473c5c83fd2a77a$var$animate","requestAnimationFrame","m1","set","convertSRGBToLinear","m2","m3","materials","textures","setMatte","setCastShadow","physicalCamera","updateMatrixWorld","background","i","l","samples","render","autoClear","map","target","texture","innerText","Math","floor","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","setClearColor","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","OrthographicCamera","$0473c5c83fd2a77a$var$orthoWidth","PathTracingRenderer","alpha","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","BlurredEnvMapGenerator","envMapPromise","Promise","resolve","$891vQ","RGBELoader","load","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","then","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderBufferGeometry","MeshStandardMaterial","geometry","toNonIndexed","clearGroups","y","min","traverse","c","computeVertexNormals","name","result","bvh","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","dispose","all","remove","classList","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","envFolder","PI","v","setFromMatrix4","Matrix4","makeRotationY","cameraFolder","apertureBlades","this","updateDisplay","listen","matFolder1","addColor","close","matFolder2","matFolder3","$0473c5c83fd2a77a$var$init"],"version":3,"file":"materialBall.2d30a0c5.js.map"}